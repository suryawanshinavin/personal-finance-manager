<%- include('../include/header'); %>
<script>
    tailwind.config = {
    theme: {
        extend: {
        animation: {
            "fade-in": "fadeIn 0.3s ease-in-out",
            "slide-up": "slideUp 0.3s ease-out",
            "scale-in": "scaleIn 0.2s ease-out",
        },
        },
    },
    };
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }

    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes scaleIn {
    from {
      transform: scale(0.95);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .dark .glass-effect {
    background: rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
</style>
</head>

<body class="bg-gray-100 font-sans">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <%- include('../include/sidebar'); %>

    <!-- Main Content -->
    <div class="flex-1 p-10">

      <%- include('../include/navbar'); %>

      <!-- Page Content -->
      <main class="space-y-8">
        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-6 border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-xl transition-all duration-300 group">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  Total Balance
                </p>
                <p class="text-2xl font-bold text-gray-800 dark:text-white">
                  ₹<span id="totalBalance">0.00</span>
                </p>
              </div>
              <div class="w-12 h-12 bg-gradient-to-r from-green-400 to-emerald-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                <i data-lucide="trending-up" class="w-6 h-6 text-white"></i>
              </div>
            </div>
          </div>
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-6 border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-xl transition-all duration-300 group">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  Total Accounts
                </p>
                <p class="text-2xl font-bold text-gray-800 dark:text-white" id="totalAccounts">
                  0
                </p>
              </div>
              <div class="w-12 h-12 bg-gradient-to-r from-blue-400 to-indigo-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                <i data-lucide="credit-card" class="w-6 h-6 text-white"></i>
              </div>
            </div>
          </div>
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-6 border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-xl transition-all duration-300 group">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  Active Accounts
                </p>
                <p class="text-2xl font-bold text-gray-800 dark:text-white" id="activeAccounts">
                  0
                </p>
              </div>
              <div class="w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                <i data-lucide="activity" class="w-6 h-6 text-white"></i>
              </div>
            </div>
          </div>
        </div>

        <!-- Accounts Table -->
        <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl border border-gray-200/50 dark:border-gray-700/50 shadow-lg overflow-hidden">
          <div class="p-6 border-b border-gray-200/50 dark:border-gray-700/50">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0">
              <div>
                <h2 class="text-xl font-bold text-gray-800 dark:text-white">
                  Account List
                </h2>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  Manage your financial accounts
                </p>
              </div>
              <button id="addAccountBtn" class="inline-flex items-center space-x-2 px-6 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-xl hover:shadow-lg hover:shadow-blue-500/25 transition-all duration-200 transform hover:scale-105 active:scale-95">
                <i data-lucide="plus" class="w-5 h-5"></i>
                <span>Add New Account</span>
              </button>
            </div>
          </div>

          <div class="overflow-x-auto">
            <table class="w-full">
              <thead class="bg-gray-50/50 dark:bg-gray-900/50">
                <tr>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 dark:text-gray-400">
                    Account Name
                  </th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 dark:text-gray-400">
                    Type
                  </th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 dark:text-gray-400">
                    Balance
                  </th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 dark:text-gray-400">
                    Created Date
                  </th>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-gray-600 dark:text-gray-400">
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody id="accountsTableBody" class="divide-y divide-gray-200/50 dark:divide-gray-700/50">
                <!-- Sample data - replace with EJS loop -->
                <tr class="hover:bg-gray-50/50 dark:hover:bg-gray-700/50 transition-colors animate-fade-in">
                  <td class="px-6 py-4">
                    <div class="flex items-center space-x-3">
                      <div class="w-10 h-10 bg-gradient-to-r from-blue-400 to-indigo-500 rounded-lg flex items-center justify-center">
                        <i data-lucide="building-2" class="w-5 h-5 text-white"></i>
                      </div>
                      <div>
                        <div class="font-medium text-gray-800 dark:text-white">
                          HDFC Savings
                        </div>
                        <div class="text-sm text-gray-600 dark:text-gray-400">
                          Primary account
                        </div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-200">
                      <i data-lucide="building-2" class="w-3 h-3 mr-1"></i>
                      Bank
                    </span>
                  </td>
                  <td class="px-6 py-4">
                    <span class="font-semibold text-gray-800 dark:text-white">₹45,230.50</span>
                  </td>
                  <td class="px-6 py-4 text-sm text-gray-600 dark:text-gray-400">
                    Jan 15, 2024
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex items-center space-x-2">
                      <button class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors group">
                        <i data-lucide="edit" class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-blue-500"></i>
                      </button>
                      <button class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors group">
                        <i data-lucide="trash-2" class="w-4 h-4 text-gray-600 dark:text-gray-400 group-hover:text-red-500"></i>
                      </button>
                    </div>
                  </td>
                </tr>
                <!-- EJS template for dynamic content -->
                <%# Replace above sample row with this EJS loop %>
              </tbody>
            </table>
          </div>
        </div>
      </main>

    </div>
  </div>

  <!-- Add Account Modal -->
  <div id="addAccountModal" class="fixed inset-0 z-50 hidden items-center justify-center p-4 bg-black/50 backdrop-blur-sm">
    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl w-full max-w-md transform scale-95 opacity-0 transition-all duration-300 animate-scale-in">
      <div class="p-6 border-b border-gray-200/50 dark:border-gray-700/50">
        <div class="flex items-center justify-between">
          <h3 class="text-lg font-semibold text-gray-800 dark:text-white">
            Add New Account
          </h3>
          <button id="closeModal" class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">
            <i data-lucide="x" class="w-5 h-5 text-gray-600 dark:text-gray-400"></i>
          </button>
        </div>
      </div>
      <form id="addAccountForm" method="POST" action="/accounts/add" class="p-6 space-y-4">
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Account Name</label>
          <input type="text" name="name" id="accountName" class="w-full px-4 py-3 rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" placeholder="Enter account name" required />
        </div>
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Account Type</label>
          <select name="type" id="accountType" class="w-full px-4 py-3 rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" required>
            <option value="">Select account type</option>
            <option value="Bank">Bank Account</option>
            <option value="Cash">Cash</option>
            <option value="Wallet">Digital Wallet</option>
            <option value="Investment">Investment Account</option>
          </select>
        </div>
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Opening
            Balance</label>
          <input type="number" name="balance" id="accountBalance" class="w-full px-4 py-3 rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" placeholder="0.00" step="0.01" required />
        </div>
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Note
            (Optional)</label>
          <textarea name="note" id="accountNote" rows="3" class="w-full px-4 py-3 rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" placeholder="Add a note about this account"></textarea>
        </div>
        <div class="flex space-x-3 pt-4">
          <button type="button" id="cancelBtn" class="flex-1 px-4 py-3 rounded-xl border border-gray-200 dark:border-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
            Cancel
          </button>
          <button type="submit" class="flex-1 px-4 py-3 rounded-xl bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium hover:shadow-lg hover:shadow-blue-500/25 transition-all duration-200 transform hover:scale-105 active:scale-95">
            Add Account
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Overlay for mobile sidebar -->
  <div id="sidebarOverlay" class="fixed inset-0 z-40 bg-black/50 backdrop-blur-sm hidden lg:hidden"></div>

  <!-- footer -->
  <%- include('../include/footer') %>

  <script>
    // Initialize Lucide icons
    // lucide.createIcons();

    // Theme toggle functionality
    const themeToggle = document.getElementById("themeToggle");
    const html = document.documentElement;

    // Check for saved theme preference or default to light mode
    const currentTheme = localStorage.getItem("theme") || "light";
    if (currentTheme === "dark") {
      html.classList.add("dark");
    }

    themeToggle.addEventListener("click", () => {
      html.classList.toggle("dark");
      const isDark = html.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });

    // Sidebar toggle functionality
    const openSidebar = document.getElementById("openSidebar");
    const closeSidebar = document.getElementById("closeSidebar");
    const sidebar = document.getElementById("sidebar");
    const sidebarOverlay = document.getElementById("sidebarOverlay");

    openSidebar.addEventListener("click", () => {
      sidebar.classList.remove("-translate-x-full");
      sidebarOverlay.classList.remove("hidden");
    });

    closeSidebar.addEventListener("click", () => {
      sidebar.classList.add("-translate-x-full");
      sidebarOverlay.classList.add("hidden");
    });

    sidebarOverlay.addEventListener("click", () => {
      sidebar.classList.add("-translate-x-full");
      sidebarOverlay.classList.add("hidden");
    });

    // Modal functionality
    const addAccountBtn = document.getElementById("addAccountBtn");
    const addAccountModal = document.getElementById("addAccountModal");
    const closeModal = document.getElementById("closeModal");
    const cancelBtn = document.getElementById("cancelBtn");
    const addAccountForm = document.getElementById("addAccountForm");

    addAccountBtn.addEventListener("click", () => {
      addAccountModal.classList.remove("hidden");
      addAccountModal.classList.add("flex");
      setTimeout(() => {
        addAccountModal
          .querySelector(".transform")
          .classList.remove("scale-95", "opacity-0");
        addAccountModal
          .querySelector(".transform")
          .classList.add("scale-100", "opacity-100");
      }, 10);
    });

    function closeModalHandler() {
      addAccountModal
        .querySelector(".transform")
        .classList.remove("scale-100", "opacity-100");
      addAccountModal
        .querySelector(".transform")
        .classList.add("scale-95", "opacity-0");
      setTimeout(() => {
        addAccountModal.classList.add("hidden");
        addAccountModal.classList.remove("flex");
        addAccountForm.reset();
      }, 300);
    }

    closeModal.addEventListener("click", closeModalHandler);
    cancelBtn.addEventListener("click", closeModalHandler);

    // Close modal when clicking outside
    addAccountModal.addEventListener("click", (e) => {
      if (e.target === addAccountModal) {
        closeModalHandler();
      }
    });

    // Form validation
    addAccountForm.addEventListener("submit", (e) => {
      const name = document.getElementById("accountName").value.trim();
      const type = document.getElementById("accountType").value;
      const balance = document.getElementById("accountBalance").value;

      if (!name || !type || !balance) {
        e.preventDefault();
        alert("Please fill in all required fields");
        return;
      }

      if (parseFloat(balance) < 0) {
        e.preventDefault();
        alert("Balance cannot be negative");
        return;
      }
    });

    // Calculate and update stats (sample implementation)
    function updateStats() {
      // This would typically be populated from server data
      const sampleAccounts = [{
          balance: 45230.5,
          type: "Bank"
        },
        {
          balance: 5000.0,
          type: "Cash"
        },
        {
          balance: 12000.0,
          type: "Wallet"
        },
      ];

      const totalBalance = sampleAccounts.reduce(
        (sum, acc) => sum + acc.balance,
        0
      );
      const totalAccounts = sampleAccounts.length;
      const activeAccounts = sampleAccounts.filter(
        (acc) => acc.balance > 0
      ).length;

      document.getElementById("totalBalance").textContent =
        totalBalance.toLocaleString("en-IN", {
          minimumFractionDigits: 2
        });
      document.getElementById("totalAccounts").textContent = totalAccounts;
      document.getElementById("activeAccounts").textContent = activeAccounts;
    }

    // Initialize stats
    updateStats();

    // Edit account function (placeholder)
    function editAccount(accountId) {
      // This would open an edit modal with pre-filled data
      alert(`Edit account with ID: ${accountId}`);
    }

    // Add smooth scrolling and animations
    document.addEventListener("DOMContentLoaded", () => {
      // Add staggered animation to table rows
      const rows = document.querySelectorAll("#accountsTableBody tr");
      rows.forEach((row, index) => {
        row.style.animationDelay = `${index * 0.1}s`;
      });
    });
  </script>
</body>

</html>