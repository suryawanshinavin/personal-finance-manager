<%- include('../include/header'); %>

<body class="bg-gray-50 font-sans">

  <%- include('../include/navbar'); %>

  <div class="flex min-h-screen">

    <%- include('../include/sidebar'); %>

    <!-- Main Content -->
    <div class="flex-1 min-h-screen">
      <!-- Desktop Header -->
      <header class="hidden lg:block bg-white shadow-sm px-6 lg:px-10 py-4">
        <div class="flex justify-between items-center">
          <div>
            <h2 class="text-2xl lg:text-3xl font-bold text-gray-800"><%- title %></h2>
            <p class="text-gray-500 mt-1">Financial insights for today</p>
          </div>
          <div class="flex items-center space-x-4">
            <button class="relative p-2 text-gray-600 hover:text-gray-800 transition-colors">
              <i class="fas fa-bell text-xl"></i>
              <span class="absolute top-0 right-0 w-3 h-3 bg-red-500 rounded-full"></span>
            </button>
            <div class="w-10 h-10 bg-gradient-to-br from-blue-400 to-purple-500 rounded-full overflow-hidden">
              <img src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=40&h=40&fit=crop&crop=face" alt="Profile" class="w-full h-full object-cover" />
            </div>
          </div>
        </div>
      </header>

      <main class="p-4 lg:p-10">

        <!-- Recent Transactions -->
        <div class="bg-white p-4 lg:p-6 rounded-xl shadow-md card-hover">
          <!-- Header -->
          <div class="px-4 pb-3 border-b bg-white flex flex-col md:flex-row md:items-center md:justify-between gap-3">
            <div>
              <h2 class="text-lg font-semibold text-gray-800">Accounts List</h2>
              <p class="text-sm text-gray-500">Overview of all your financial accounts</p>
            </div>

            <button id="addAccountBtn" class="flex items-center gap-2 px-3 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md shadow-sm">
              <i class="fa-solid fa-plus text-sm"></i>
              <span>Add Account</span>
            </button>
          </div>

          <!-- Table View (Desktop) -->
          <div class="overflow-x-auto hidden lg:block">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50 text-xs font-semibold text-gray-500 uppercase tracking-wide">
                <tr>
                  <th class="px-6 py-3 text-left">Name</th>
                  <th class="px-6 py-3 text-left">Type</th>
                  <th class="px-6 py-3 text-left">Balance</th>
                  <th class="px-6 py-3 text-left">Note</th>
                  <th class="px-6 py-3 text-right">Actions</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-100 text-sm text-gray-700">
                <% 
                let totalBalance = 0;
                accounts.forEach(account => { 
                  totalBalance += parseFloat(account.balance);
                  %>
                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4"><%= account.name %></td>
                  <td class="px-6 py-4"><%= account.type %></td>
                  <td class="px-6 py-4 font-medium text-green-600"><%= account.balance %></td>
                  <td class="px-6 py-4"><%= account.note %></td>
                  <td class="px-6 py-4 text-right space-x-2">
                    <a href="/accounts/<%= account.id %>/edit" class="text-blue-600 hover:text-blue-800">Edit</a>
                    <a href="/accounts/<%= account.id %>/delete" class="text-red-600 hover:text-red-800">Delete</a>
                  </td>
                </tr>
                <% }) %>
              </tbody>
              <tfoot>
                <tr>
                  <td colspan="5" class="px-6 py-4 text-left text-sm font-semibold text-gray-900">
                    Total Balance:  â‚¹<span class="font-bold text-green-600 underline"><%= totalBalance.toFixed(2) %></span>
                  </td>
                </tr>
              </tfoot>
            </table>
          </div>

          <!-- Mobile View -->
          <div class="lg:hidden px-4 py-4 space-y-4 bg-white">
            <% accounts.forEach(account => { %>
            <div class="rounded-xl border border-gray-200 p-4 shadow-sm space-y-2 bg-gray-50">
              <div class="flex justify-between text-sm">
                <span class="font-medium text-gray-600">Name:</span>
                <span class="text-gray-900"><%= account.name %></span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="font-medium text-gray-600">Type:</span>
                <span class="text-gray-900"><%= account.type %></span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="font-medium text-gray-600">Balance:</span>
                <span class="text-green-700 font-semibold"><%= account.balance %></span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="font-medium text-gray-600">Note:</span>
                <span class="text-gray-900"><%= account.note %></span>
              </div>
              <div class="flex justify-end space-x-3 pt-2">
                <a href="/accounts/<%= account.id %>/edit" class="text-blue-600 text-sm hover:underline">Edit</a>
                <a href="/accounts/<%= account.id %>/delete" class="text-red-600 text-sm hover:underline">Delete</a>
              </div>
            </div>
            <% }) %>
          </div>

        </div>
      </main>

    </div>
  </div>

  <!-- Add Account Modal -->
  <div id="addAccountModal" class="fixed inset-0 z-50 hidden items-center justify-center p-2 bg-black/30 backdrop-blur-sm">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-sm transform scale-95 opacity-0 transition-all duration-300 animate-scale-in">

      <!-- Header -->
      <div class="flex items-center justify-between px-4 py-3 border-b border-gray-200">
        <h3 class="text-base font-semibold text-gray-800">New Account</h3>
        <button id="closeModal" class="text-gray-400 hover:text-red-500">
          <i class="fa-solid fa-xmark text-lg"></i>
        </button>
      </div>

      <!-- Form -->
      <form id="addAccountForm" method="POST" action="/accounts" class="px-4 py-5 space-y-4 text-sm">

        <!-- Account Name -->
        <div>
          <label for="accountName" class="block mb-1 text-gray-600">Name</label>
          <input type="text" name="name" id="accountName" placeholder="e.g., SBI Savings" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300" required>
        </div>

        <!-- Type -->
        <div>
          <label for="accountType" class="block mb-1 text-gray-600">Type</label>
          <select name="type" id="accountType" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300" required>
            <option value="">Choose</option>
            <option value="Bank">Bank</option>
            <option value="Cash">Cash</option>
            <option value="Wallet">Wallet</option>
            <option value="Investment">Investment</option>
          </select>
        </div>

        <!-- Balance -->
        <div>
          <label for="accountBalance" class="block mb-1 text-gray-600">Balance</label>
          <input type="number" name="balance" id="accountBalance" placeholder="0.00" step="0.01" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300" required>
        </div>

        <!-- Note -->
        <div>
          <label for="accountNote" class="block mb-1 text-gray-600">Note <span class="text-gray-400">(optional)</span></label>
          <textarea name="note" id="accountNote" rows="2" placeholder="Extra info" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300"></textarea>
        </div>

        <!-- Buttons -->
        <div class="flex justify-end gap-2 pt-2 text-sm">
          <button type="button" id="cancelBtn" class="px-3 py-1.5 border border-gray-300 rounded-md text-gray-600 hover:bg-gray-100 transition">Cancel</button>
          <button type="submit" class="px-4 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition font-medium">Add</button>
        </div>

      </form>

    </div>
  </div>

  <!-- Overlay for mobile sidebar -->
  <div id="sidebarOverlay" class="fixed inset-0 z-40 bg-black/50 backdrop-blur-sm hidden lg:hidden"></div>


  <%- include('../include/footer') %>

  <script>
    // Modal functionality
    const addAccountBtn = document.getElementById("addAccountBtn");
    const addAccountModal = document.getElementById("addAccountModal");
    const closeModal = document.getElementById("closeModal");
    const cancelBtn = document.getElementById("cancelBtn");
    const addAccountForm = document.getElementById("addAccountForm");

    addAccountBtn.addEventListener("click", () => {
      addAccountModal.classList.remove("hidden");
      addAccountModal.classList.add("flex");
      setTimeout(() => {
        addAccountModal
          .querySelector(".transform")
          .classList.remove("scale-95", "opacity-0");
        addAccountModal
          .querySelector(".transform")
          .classList.add("scale-100", "opacity-100");
      }, 10);
    });

    function closeModalHandler() {
      addAccountModal
        .querySelector(".transform")
        .classList.remove("scale-100", "opacity-100");
      addAccountModal
        .querySelector(".transform")
        .classList.add("scale-95", "opacity-0");
      setTimeout(() => {
        addAccountModal.classList.add("hidden");
        addAccountModal.classList.remove("flex");
        addAccountForm.reset();
      }, 300);
    }
    closeModal.addEventListener("click", closeModalHandler);
    cancelBtn.addEventListener("click", closeModalHandler);

    // Close modal when clicking outside
    addAccountModal.addEventListener("click", (e) => {
      if (e.target === addAccountModal) {
        closeModalHandler();
      }
    });

    // Form validation
    addAccountForm.addEventListener("submit", async (e) => {
      e.preventDefault(); // ðŸ”¹ Always prevent default first

      const formData = new FormData(addAccountForm);
      const formParams = new URLSearchParams(formData); // works directly

      let name = formData.get("name");
      let type = formData.get("type");
      let balance = formData.get("balance");
      // let note = formData.get("note");

      console.log(name, type, balance);

      if (!name || !type || !balance) {
        alert("Please fill in all required fields");
        return;
      }

      if (parseFloat(balance) < 0) {
        alert("Balance cannot be negative");
        return;
      }

      try {
        const res = await fetch("/accounts", {
          method: "POST",
          body: formParams,
          headers: {
            "Content-Type": "application/x-www-form-urlencoded"
          }
        });

        const data = await res.json();
        console.log(data);

        if (data.success) {
          // alert(data.message);
          toastr.success(data.message);
          closeModalHandler();
        }

        // Redirect or show success message
      } catch (err) {
        console.error("Error submitting account:", err);
        alert("An error occurred. Please try again.");
      }
    });

    // Edit account function (placeholder)
    function editAccount(accountId) {
      // This would open an edit modal with pre-filled data
      alert(`Edit account with ID: ${accountId}`);
    }
  </script>
</body>

</html>