<%- include('../include/header'); %>
<script>
  tailwind.config = {
    theme: {
      extend: {
        animation: {
          "fade-in": "fadeIn 0.3s ease-in-out",
          "slide-up": "slideUp 0.3s ease-out",
          "scale-in": "scaleIn 0.2s ease-out",
        },
      },
    },
  };
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }

    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes scaleIn {
    from {
      transform: scale(0.95);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .dark .glass-effect {
    background: rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
</style>
</head>

<body class="bg-white-100 font-sans">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <%- include('../include/sidebar'); %>

    <!-- Main Content -->
    <div class="flex-1 p-10">

      <%- include('../include/navbar'); %>

      <!-- Page Content -->
      <main class="space-y-8">

        <!-- Accounts Table -->
        <div class="bg-white rounded-2xl border border-gray-200 shadow-md overflow-hidden">
          <!-- Header -->
          <div class="p-6 border-b border-gray-200">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0">
              <div>
                <h2 class="text-xl font-semibold text-gray-800">Account List</h2>
                <p class="text-sm text-gray-500">Manage your financial accounts efficiently</p>
              </div>
              <!-- Add Account Button -->
              <button id="addAccountBtn" class="inline-flex items-center space-x-2 px-5 py-2.5 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-all duration-200">
                <i class="fa-solid fa-plus w-5 h-5"></i>
                <span>Add New Account</span>
              </button>

            </div>
          </div>

          <!-- Table -->
          <div class="overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-700">
              <thead class="bg-gray-50 text-gray-600 uppercase tracking-wide border-b border-gray-200">
                <tr>
                  <th class="px-6 py-4 font-medium">Account Name</th>
                  <th class="px-6 py-4 font-medium">Type</th>
                  <th class="px-6 py-4 font-medium">Balance</th>
                  <th class="px-6 py-4 font-medium">Created Date</th>
                  <th class="px-6 py-4 font-medium">Actions</th>
                </tr>
              </thead>
              <tbody id="accountsTableBody" class="divide-y divide-gray-100">
                <!-- Sample row -->
                <tr class="hover:bg-gray-50 transition-colors">
                  <td class="px-6 py-4">
                    <div class="flex items-center space-x-3">
                      <div class="w-10 h-10 bg-blue-100 text-blue-600 rounded-lg flex items-center justify-center">
                        <i class="fa-solid fa-building-columns w-5 h-5"></i>
                      </div>
                      <div>
                        <div class="font-medium text-gray-900">BOI Savings</div>
                        <div class="text-xs text-gray-500">Primary account</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-50 text-blue-600">
                      <i class="fa-solid fa-building-columns w-3 h-3 mr-1"></i>
                      Bank
                    </span>
                  </td>
                  <td class="px-6 py-4 font-semibold text-gray-900">â‚¹45,230.50</td>
                  <td class="px-6 py-4 text-gray-500">Jan 15, 2024</td>
                  <td class="px-6 py-4">
                    <div class="flex items-center space-x-2">
                      <button class="p-2 rounded-md hover:bg-gray-100 transition-colors group">
                        <i class="fa-solid fa-pen-to-square w-4 h-4 text-gray-500 group-hover:text-blue-600"></i>
                      </button>
                      <button class="p-2 rounded-md hover:bg-gray-100 transition-colors group">
                        <i class="fa-solid fa-trash w-4 h-4 text-gray-500 group-hover:text-red-600"></i>
                      </button>
                    </div>
                  </td>
                </tr>

                <!-- Replace with EJS loop -->
                <% accounts.forEach(account => { %>

                <% }) %>

              </tbody>
            </table>
          </div>
        </div>

      </main>

    </div>
  </div>

  <!-- Add Account Modal -->
  <div id="addAccountModal" class="fixed inset-0 z-50 hidden items-center justify-center p-4 bg-black/40 backdrop-blur-sm">
    <div class="bg-white rounded-xl shadow-xl w-full max-w-md transform scale-95 opacity-0 transition-all duration-300 animate-scale-in">

      <!-- Modal Header -->
      <div class="p-5 border-b border-gray-200">
        <div class="flex items-center justify-between">
          <h3 class="text-lg font-semibold text-gray-800">Add New Account</h3>
          <button id="closeModal" class="text-gray-500 hover:text-red-500 transition-colors">
            <i class="fa-solid fa-xmark text-xl"></i>
          </button>
        </div>
      </div>

      <!-- Form -->
      <form id="addAccountForm" method="POST" action="/accounts" class="p-6 space-y-5">
        <!-- Account Name -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Account Name</label>
          <input type="text" name="name" id="accountName" class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none" placeholder="Enter account name" required />
        </div>

        <!-- Account Type -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Account Type</label>
          <select name="type" id="accountType" class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none" required>
            <option value="">Select account type</option>
            <option value="Bank">Bank Account</option>
            <option value="Cash">Cash</option>
            <option value="Wallet">Digital Wallet</option>
            <option value="Investment">Investment Account</option>
          </select>
        </div>

        <!-- Opening Balance -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Opening Balance</label>
          <input type="number" name="balance" id="accountBalance" class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none" placeholder="0.00" step="0.01" required />
        </div>

        <!-- Optional Note -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Note <span class="text-gray-400">(optional)</span></label>
          <textarea name="note" id="accountNote" rows="3" class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none" placeholder="Add a note about this account"></textarea>
        </div>

        <!-- Buttons -->
        <div class="flex items-center justify-end space-x-3 pt-2">
          <button type="button" id="cancelBtn" class="px-4 py-2.5 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors">
            Cancel
          </button>
          <button type="submit" class="px-5 py-2.5 rounded-lg bg-blue-600 text-white font-medium hover:bg-blue-700 transition-colors">
            Add Account
          </button>
        </div>
      </form>

    </div>
  </div>

  <!-- Overlay for mobile sidebar -->
  <div id="sidebarOverlay" class="fixed inset-0 z-40 bg-black/50 backdrop-blur-sm hidden lg:hidden"></div>

  <!-- footer -->
  <%- include('../include/footer') %>

  <script>
    // Modal functionality
    const addAccountBtn = document.getElementById("addAccountBtn");
    const addAccountModal = document.getElementById("addAccountModal");
    const closeModal = document.getElementById("closeModal");
    const cancelBtn = document.getElementById("cancelBtn");
    const addAccountForm = document.getElementById("addAccountForm");

    addAccountBtn.addEventListener("click", () => {
      addAccountModal.classList.remove("hidden");
      addAccountModal.classList.add("flex");
      setTimeout(() => {
        addAccountModal
          .querySelector(".transform")
          .classList.remove("scale-95", "opacity-0");
        addAccountModal
          .querySelector(".transform")
          .classList.add("scale-100", "opacity-100");
      }, 10);
    });

    function closeModalHandler() {
      addAccountModal
        .querySelector(".transform")
        .classList.remove("scale-100", "opacity-100");
      addAccountModal
        .querySelector(".transform")
        .classList.add("scale-95", "opacity-0");
      setTimeout(() => {
        addAccountModal.classList.add("hidden");
        addAccountModal.classList.remove("flex");
        addAccountForm.reset();
      }, 300);
    }

    closeModal.addEventListener("click", closeModalHandler);
    cancelBtn.addEventListener("click", closeModalHandler);

    // Close modal when clicking outside
    addAccountModal.addEventListener("click", (e) => {
      if (e.target === addAccountModal) {
        closeModalHandler();
      }
    });

    // Form validation
    addAccountForm.addEventListener("submit", (e) => {
      const name = document.getElementById("accountName").value.trim();
      const type = document.getElementById("accountType").value;
      const balance = document.getElementById("accountBalance").value;

      if (!name || !type || !balance) {
        e.preventDefault();
        alert("Please fill in all required fields");
        return;
      }

      if (parseFloat(balance) < 0) {
        e.preventDefault();
        alert("Balance cannot be negative");
        return;
      }
    });

    // Edit account function (placeholder)
    function editAccount(accountId) {
      // This would open an edit modal with pre-filled data
      alert(`Edit account with ID: ${accountId}`);
    }

    // Add smooth scrolling and animations
    document.addEventListener("DOMContentLoaded", () => {
      // Add staggered animation to table rows
      const rows = document.querySelectorAll("#accountsTableBody tr");
      rows.forEach((row, index) => {
        row.style.animationDelay = `${index * 0.1}s`;
      });
    });
    
  </script>
</body>

</html>