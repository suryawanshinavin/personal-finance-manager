<%- include('../include/header'); %>

<body class="bg-gray-50 font-sans">
    <%- include('../include/navbar'); %>

    <div class="flex min-h-screen">
        <%- include('../include/sidebar'); %>

        <!-- Main Content -->
        <div class="flex-1 min-h-screen">
            <!-- Header -->
            <header class="hidden lg:block bg-white shadow-sm px-6 lg:px-10 py-4">
                <div class="flex justify-between items-center">
                    <div>
                        <h2 class="text-2xl lg:text-3xl font-bold text-gray-800"><%- title %></h2>
                        <p class="text-gray-500 mt-1">Track your incomes & expenses</p>
                    </div>
                </div>
            </header>

            <main class="p-4 lg:p-8 bg-gradient-to-br from-slate-50 to-blue-50 min-h-screen">
                <!-- Statistics Cards -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                    <div
                        class="bg-gradient-to-r from-emerald-500 to-emerald-600 rounded-2xl p-6 text-white shadow-lg hover:shadow-xl transition-all duration-300">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-emerald-100 text-sm font-medium">Total Income</p>
                                <p class="text-2xl font-bold" id="totalIncome">₹0.00</p>
                            </div>
                            <div class="bg-white bg-opacity-20 rounded-full p-3">
                                <i class="fas fa-arrow-up text-xl"></i>
                            </div>
                        </div>
                    </div>

                    <div
                        class="bg-gradient-to-r from-red-500 to-red-600 rounded-2xl p-6 text-white shadow-lg hover:shadow-xl transition-all duration-300">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-red-100 text-sm font-medium">Total Expenses</p>
                                <p class="text-2xl font-bold" id="totalExpenses">₹0.00</p>
                            </div>
                            <div class="bg-white bg-opacity-20 rounded-full p-3">
                                <i class="fas fa-arrow-down text-xl"></i>
                            </div>
                        </div>
                    </div>

                    <div
                        class="bg-gradient-to-r from-blue-500 to-blue-600 rounded-2xl p-6 text-white shadow-lg hover:shadow-xl transition-all duration-300">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-100 text-sm font-medium">Net Balance</p>
                                <p class="text-2xl font-bold" id="netBalance">₹0.00</p>
                            </div>
                            <div class="bg-white bg-opacity-20 rounded-full p-3">
                                <i class="fas fa-wallet text-xl"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Filters & Controls -->
                <div class="bg-white rounded-2xl shadow-lg p-6 mb-8 border border-gray-100">
                    <div
                        class="flex flex-col lg:flex-row gap-4 items-start lg:items-center justify-between">
                        <!-- Filters Section -->
                        <div class="flex flex-wrap gap-3 items-center flex-1">
                            <div class="relative">
                                <i
                                    class="fas fa-calendar-alt absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-sm"></i>
                                <input type="date" id="fromDate"
                                    class="pl-10 pr-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-sm"
                                    placeholder="From Date" />
                            </div>

                            <div class="relative">
                                <i
                                    class="fas fa-calendar-alt absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-sm"></i>
                                <input type="date" id="toDate"
                                    class="pl-10 pr-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-sm"
                                    placeholder="To Date" />
                            </div>

                            <div class="relative">
                                <i
                                    class="fas fa-university absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-sm"></i>
                                <select id="filterAccount"
                                    class="pl-10 pr-8 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-sm appearance-none min-w-[140px]">
                                    <option value="">All Accounts</option>
                                    <!-- Account options here -->
                                </select>
                            </div>

                            <div class="relative">
                                <i
                                    class="fas fa-tags absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-sm"></i>
                                <select id="filterCategory"
                                    class="pl-10 pr-8 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 text-sm appearance-none min-w-[140px]">
                                    <option value="">All Categories</option>
                                    <!-- Category options here -->
                                </select>
                            </div>

                            <button
                                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 shadow-lg hover:shadow-xl"
                                onclick="applyFilters()">
                                <i class="fas fa-filter text-sm"></i>
                                Apply Filters
                            </button>

                            <button
                                class="bg-gray-100 hover:bg-gray-200 text-gray-600 px-4 py-3 rounded-xl font-medium transition-all duration-200 flex items-center gap-2"
                                onclick="clearFilters()">
                                <i class="fas fa-times text-sm"></i>
                                Clear
                            </button>
                        </div>

                        <!-- Add Transaction Button -->
                        <button id="addTransactionBtn" type="button" onclick="openMe();"
                            class="bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 shadow-lg hover:shadow-xl whitespace-nowrap">
                            <i class="fas fa-plus text-sm"></i>
                            Add Transaction
                        </button>
                    </div>
                </div>

                <!-- Transactions Table -->
                <div class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                    <!-- Table Header -->
                    <div
                        class="bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <h3 class="text-lg font-semibold text-gray-800 flex items-center gap-2">
                                <i class="fas fa-list text-blue-600"></i>
                                Recent Transactions
                            </h3>
                            <div class="text-sm text-gray-500" id="transactionCount">
                                Loading...
                            </div>
                        </div>
                    </div>

                    <!-- Table Content -->
                    <div class="overflow-x-auto custom-scrollbar">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-calendar text-gray-400"></i>
                                            Date
                                        </div>
                                    </th>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-exchange-alt text-gray-400"></i>
                                            Type
                                        </div>
                                    </th>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-university text-gray-400"></i>
                                            Account
                                        </div>
                                    </th>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-tags text-gray-400"></i>
                                            Category
                                        </div>
                                    </th>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-rupee-sign text-gray-400"></i>
                                            Amount
                                        </div>
                                    </th>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider hidden sm:table-cell">
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-sticky-note text-gray-400"></i>
                                            Note
                                        </div>
                                    </th>
                                    <th
                                        class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="transactionsBody" class="bg-white divide-y divide-gray-100">
                                <!-- Loading State -->
                                <tr id="loadingRow">
                                    <td colspan="7" class="px-6 py-12 text-center">
                                        <div class="flex items-center justify-center gap-3">
                                            <div
                                                class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600">
                                            </div>
                                            <span class="text-gray-500">Loading transactions...</span>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Empty State -->
                    <div id="emptyState" class="hidden px-6 py-12 text-center">
                        <div class="mx-auto h-24 w-24 text-gray-300 mb-4">
                            <i class="fas fa-receipt text-6xl"></i>
                        </div>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">No transactions found</h3>
                        <p class="text-gray-500 mb-6">Get started by adding your first transaction</p>
                        <button type="button" onclick="openMe()"
                            class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 mx-auto">
                            <i class="fas fa-plus text-sm"></i>
                            Add Transaction
                        </button>
                    </div>
                </div>

            </main>
        </div>
    </div>

    <!-- Add Transaction Modal -->
    <div id="addTransactionModal" class="fixed inset-0 z-50 hidden items-center justify-center p-2 bg-black/30 backdrop-blur-sm">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-sm transform scale-95 opacity-0 transition-all duration-300 animate-scale-in">

        <!-- Header -->
        <div class="flex items-center justify-between px-4 py-3 border-b border-gray-200">
            <h3 class="text-base font-semibold text-gray-800">New Transaction</h3>
            <button id="closeModal" class="text-gray-400 hover:text-red-500">
            <i class="fa-solid fa-xmark text-lg"></i>
            </button>
        </div>

        <!-- Form -->
        <form id="addTransactionForm" method="POST" action="/transactions" class="px-4 py-5 space-y-4 text-sm">

            <!-- Account Name -->
            <div>
                <label for="transactionName" class="block mb-1 text-gray-600">Name</label>
                <input type="text" name="name" id="transactionName" placeholder="e.g., SBI Savings" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300" required>
                <input type="hidden" name="id" id="transactionId" />
            </div>

            <!-- Type -->
            <div>
            <label for="transactionType" class="block mb-1 text-gray-600">Type</label>
            <select name="type" id="transactionType" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300" required>
                <option value="">Choose</option>
                <option value="Bank">Bank</option>
                <option value="Cash">Cash</option>
                <option value="Wallet">Wallet</option>
                <option value="Investment">Investment</option>
            </select>
            </div>

            <!-- Balance -->
            <div>
            <label for="transactionBalance" class="block mb-1 text-gray-600">Balance</label>
            <input type="number" name="balance" id="transactionBalance" placeholder="0.00" step="0.01" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300" required>
            </div>

            <!-- Note -->
            <div>
            <label for="transactionNote" class="block mb-1 text-gray-600">Note <span class="text-gray-400">(optional)</span></label>
            <textarea name="note" id="transactionNote" rows="2" placeholder="Extra info" class="w-full px-3 py-2 border rounded-md focus:ring focus:ring-blue-200 outline-none border-gray-300"></textarea>
            </div>

            <!-- Buttons -->
            <div class="flex justify-end gap-2 pt-2 text-sm">
            <button type="submit" class="px-4 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition font-medium">Add</button>
            <button type="button" id="cancelBtn" class="px-3 py-1.5 border border-gray-300 rounded-md text-gray-600 hover:bg-gray-100 transition">Cancel</button>
            </div>

        </form>

        </div>
    </div>

    <%- include('../include/footer') %>

    <script>

        const addTransactionModal = document.getElementById("addTransactionModal");
        const closeModal = document.getElementById("closeModal");
        const cancelBtn = document.getElementById("cancelBtn");
        const addTransactionForm = document.getElementById("addTransactionForm");

        function applyFilters() {
            fetchAndRenderTransactions();
        }

        function clearFilters() {
            document.getElementById("fromDate").value = "";
            document.getElementById("toDate").value = "";
            document.getElementById("filterAccount").value = "";
            document.getElementById("filterCategory").value = "";
            fetchAndRenderTransactions();
        }

        async function openMe(id = null) {
            console.log("id", id);

            try {

                if (id !== null) {

                const res = await fetch(`/accounts/${id}`);
                const data = await res.json();

                console.log("data", data);

                if (!data || !data.account) {
                    alert("Account not found");
                    return;
                }

                // Populate the form
                document.getElementById("accountId").value = data.account.id;
                document.getElementById("accountName").value = data.account.name;
                document.getElementById("accountType").value = data.account.type;
                document.getElementById("accountBalance").value = data.account.balance;
                document.getElementById("accountNote").value = data.account.note;

                // Change button text to "Update"
                const submitBtn = addTransactionForm.querySelector("button[type='submit']");
                submitBtn.textContent = "Update";

                }

                addTransactionModal.classList.remove("hidden");
                addTransactionModal.classList.add("flex");
                setTimeout(() => {
                const modalBox = addTransactionModal.querySelector(".transform");
                modalBox.classList.remove("scale-95", "opacity-0");
                modalBox.classList.add("scale-100", "opacity-100");
                }, 10);

            } catch (err) {
                console.error("Error loading transactions:", err);
                alert("Failed to load transactions data.");
            }

        }

        function closeMe() {
            const modalBox = addTransactionModal.querySelector(".transform");
            modalBox.classList.remove("scale-100", "opacity-100");
            modalBox.classList.add("scale-95", "opacity-0");
            setTimeout(() => {
                addTransactionModal.classList.add("hidden");
                addTransactionModal.classList.remove("flex");
                addTransactionForm.reset();
            }, 300);
        }

        async function fetchAndRenderTransactions() {
            const from = document.getElementById("fromDate").value;
            const to = document.getElementById("toDate").value;
            const account = document.getElementById("filterAccount").value;
            const category = document.getElementById("filterCategory").value;

            try {
                const query = new URLSearchParams({
                    from,
                    to,
                    account,
                    category
                }).toString();
                const res = await fetch(`/transactions/api/gettransactions?${query}`);
                const data = await res.json();

                const tbody = document.getElementById("transactionsBody");
                const emptyState = document.getElementById("emptyState");
                const loadingRow = document.getElementById("loadingRow");

                // Hide loading
                if (loadingRow) loadingRow.style.display = 'none';

                tbody.innerHTML = "";

                if (data.transactions && data.transactions.length > 0) {
                    emptyState.classList.add('hidden');

                    // Calculate totals
                    let totalIncome = 0;
                    let totalExpenses = 0;

                    data.transactions.forEach((tx, index) => {
                        const amount = parseFloat(tx.amount);
                        if (tx.type === 'Income') {
                            totalIncome += amount;
                        } else {
                            totalExpenses += amount;
                        }

                        const row = document.createElement("tr");
                        row.className = "hover:bg-gray-50 transition-all duration-200 animate-fade-in";
                        row.style.animationDelay = `${index * 0.05}s`;

                        const formattedDate = new Date(tx.date).toLocaleDateString('en-IN', {
                            day: '2-digit',
                            month: 'short',
                            year: 'numeric'
                        });

                        row.innerHTML = `
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900">${formattedDate}</div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${tx.type === 'Income'
                                ? 'bg-emerald-100 text-emerald-800'
                                : 'bg-red-100 text-red-800'
                            } gap-1">
                                        <i class="fas ${tx.type === 'Income' ? 'fa-arrow-up' : 'fa-arrow-down'} text-xs"></i>
                                        ${tx.type}
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center gap-2">
                                        <div class="h-8 w-8 rounded-full bg-blue-100 flex items-center justify-center">
                                            <i class="fas fa-university text-blue-600 text-xs"></i>
                                        </div>
                                        <div class="text-sm font-medium text-gray-900">${tx.account.name}</div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center gap-2">
                                        <div class="h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center">
                                            <i class="fas fa-tag text-purple-600 text-xs"></i>
                                        </div>
                                        <div class="text-sm text-gray-900">${tx.category.name}</div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-lg font-bold ${tx.type === 'Income' ? 'text-emerald-600' : 'text-red-600'}">
                                        ${tx.type === 'Income' ? '+' : '-'}₹${amount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 hidden sm:table-cell">
                                        <div class="text-sm text-gray-500 max-w-xs truncate" title="${tx.note || ''}">
                                        ${tx.note || '<span class="italic text-gray-400">No note</span>'}
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center gap-2">
                                        <button class="text-blue-600 hover:text-blue-900 transition-colors duration-200" title="Edit">
                                            <i class="fas fa-edit text-sm"></i>
                                        </button>
                                        <button class="text-red-600 hover:text-red-900 transition-colors duration-200" title="Delete">
                                            <i class="fas fa-trash text-sm"></i>
                                        </button>
                                        </div>
                                    </td>
                                    `;
                        tbody.appendChild(row);
                    });

                    // Update statistics
                    const netBalance = totalIncome - totalExpenses;
                    document.getElementById("totalIncome").textContent = `₹${totalIncome.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
                    document.getElementById("totalExpenses").textContent = `₹${totalExpenses.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
                    document.getElementById("netBalance").textContent = `₹${netBalance.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;

                    // Update transaction count
                    document.getElementById("transactionCount").textContent = `${data.transactions.length} transaction${data.transactions.length !== 1 ? 's' : ''}`;
                } else {
                    emptyState.classList.remove('hidden');
                    document.getElementById("transactionCount").textContent = "0 transactions";

                    // Reset statistics
                    document.getElementById("totalIncome").textContent = "₹0.00";
                    document.getElementById("totalExpenses").textContent = "₹0.00";
                    document.getElementById("netBalance").textContent = "₹0.00";
                }
            } catch (err) {
                console.error("Error fetching transactions:", err);

                // Show error state
                const tbody = document.getElementById("transactionsBody");
                const loadingRow = document.getElementById("loadingRow");
                if (loadingRow) loadingRow.style.display = 'none';

                tbody.innerHTML = `
                                    <tr>
                                        <td colspan="7" class="px-6 py-12 text-center">
                                            <div class="flex flex-col items-center gap-3">
                                                <div class="h-16 w-16 text-red-300 mb-2">
                                                    <i class="fas fa-exclamation-triangle text-4xl"></i>
                                                </div>
                                                <h3 class="text-lg font-medium text-gray-900">Error loading transactions</h3>
                                                <p class="text-gray-500 mb-4">Please try again later</p>
                                                <button onclick="fetchAndRenderTransactions()" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-xl font-medium transition-all duration-200">
                                                    <i class="fas fa-redo text-sm mr-2"></i>
                                                    Retry
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    `;
            }
        }
    
        async function handleSubmit(e) {
            e.preventDefault();

            const formData = new FormData(addTransactionForm);
            const formParams = new URLSearchParams(formData);

            const id = formData.get("id");
            const name = formData.get("name");
            const type = formData.get("type");
            const balance = formData.get("balance");

            if (!name || !type || !balance) {
                alert("Please fill in all required fields");
                return;
            }

            if (parseFloat(balance) < 0) {
                alert("Balance cannot be negative");
                return;
            }

            try {
                const url = id ? `/accounts/${id}` : "/accounts";
                const method = id ? "PUT" : "POST";

                const res = await fetch(url, {
                method,
                body: formParams,
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                }
                });

                const data = await res.json();

                if (data.success) {
                toastr.success(data.message);
                closeMe();
                fetchAndRenderAccounts();
                // Optional: refresh page or update table
                } else {
                toastr.error(data.message || "Something went wrong.");
                }
            } catch (err) {
                console.error("Submit failed:", err);
                alert("An error occurred. Please try again.");
            }
        }

        function initAccountModalEvents() {
            closeModal.addEventListener("click", closeMe);
            cancelBtn.addEventListener("click", closeMe);
            addTransactionModal.addEventListener("click", (e) => {
                if (e.target === addTransactionModal) {
                closeMe();
                }
            });
            addTransactionForm.addEventListener("submit", handleSubmit);
        }

        document.addEventListener('DOMContentLoaded', () => {
            fetchAndRenderTransactions();
            initAccountModalEvents();
        });
    </script>

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

        * {
            font-family: 'Inter', sans-serif;
        }

        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out forwards;
            opacity: 0;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .custom-scrollbar::-webkit-scrollbar {
            width: 6px;
            height: 6px;
        }

        .custom-scrollbar::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }

        /* Remove default select arrow */
        select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.75rem center;
            background-repeat: no-repeat;
            background-size: 1.5em 1.5em;
        }
    </style>
</body>

</html>